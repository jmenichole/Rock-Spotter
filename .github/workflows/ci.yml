name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Check syntax
      working-directory: ./backend
      run: node -c src/server.js

    - name: Verify package.json
      working-directory: ./backend
      run: |
        npm run start --dry-run
        echo "✅ Start script verified"

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      working-directory: ./backend
      run: |
        docker build -t rock-spotter-api:test .
        echo "✅ Docker image built successfully"

    - name: Test Docker image
      run: |
        docker images | grep rock-spotter-api
        echo "✅ Docker image verified"

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Check JavaScript files
      working-directory: ./backend
      run: |
        # Check for syntax errors in all JS files
        find src -name "*.js" -exec node -c {} \;
        echo "✅ All JavaScript files have valid syntax"

    - name: Verify configuration files
      run: |
        # Verify JSON files are valid
        node -e "JSON.parse(require('fs').readFileSync('backend/package.json', 'utf8'))"
        node -e "JSON.parse(require('fs').readFileSync('railway.json', 'utf8'))"
        echo "✅ Configuration files are valid"
